---
sudo: false

env:
  - distro: debian
    init: /sbin/init
    run_opts: ""
    tag: wheezy

services:
  - docker

before_install:
  - 'sudo docker pull ralphie02/${distro}-ansible:${tag}'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'sudo docker run --detach -v "${PWD}":/etc/ansible/roles/firewall:ro -v "${PWD}"/tests/defaults:/etc/ansible/roles/firewall/defaults:ro ${run_opts} ralphie02/${distro}-ansible:${tag} ${init} > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/firewall/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/firewall/tests/test.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/firewall/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # Ensure Java is installed.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm which java'

after_success:
  # Clean up.
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
